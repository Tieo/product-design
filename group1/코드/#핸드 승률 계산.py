#핸드 승률 계산 

'''

https://m.blog.naver.com/PostView.nhn?blogId=josoblue&logNo=220819847708&proxyReferer=https:%2F%2Fwww.google.com%2F

두 장이 같은 무늬인가? off-suit, suit 알파벳이 같냐? 다르냐? -> o , s
p = pair, o = off-suited 불일치 s = suited 일치

핸드 순위는 
premium hand(상위 10% 1~17위) = [('p',14,14),('p',13,13),('p',12,12),('s',14,13),('p',11,11),('s',14,12),('s',13,12),('s',14,11),('s',13,11),('p',10,10),('o',14,13),('s',14,10),('s',12,11),('s',13,10),('s',12,10),('s',11,10),('p',9,9)]

''' 

#def hand_check(): 

# 프레플랍 단계 먼저 자신에게 주어진 카드 정보를 분석한다. 
premium = [('p', 14,14),('p',13,13),('p',12,12),('s',14,13),('p',11,11),('s',14,12),('s',13,12),('s',14,11),('s',13,11),('p',10,10),('o',14,13),('s',14,10),('s',12,11),('s',13,10),('s',12,10),('s',11,10),('p',9,9)]
special = [('o',14,12),('s',14,9),('o',13,12),('p',8,8),('s',13,9),('s',10,9),('s',14,8),('s',12,9),('s',11,9),('o',14,11),('s',14,5),('p',7,7),('s',14,7),('o',13,11),('s',14,4),('s',14,3),('s',14,6)]
good = [('o',12,11),('p',6,6),('s',13,8),('s',10,8),('s',14,2),('s',9,8),('s',11,8),('o',14,10),('s',12,8),('s',13,7),('o',13,10),('p',5,5),('o',11,10),('s',8,7),('o',12,10),('p',4,4),('p',3,3),('p',2,2)]

#if players[i][0] == 'opponent1':
hand1, hand2 = ('h', 14), ('c', 13)

# 숫자 비교 후 pair인지 확인(pair이면 p, 아니면 문자 확인으로 넘어감), 문자 확인해서 일치하는지 확인(불일치 하면 o, 일치하면 s ),  숫자 조합해서 하나의 튜플로 제작

if hand1[1] == hand2[1]:
    tup1 = 'p'
else:
    if hand1[0] == hand2[0]:
        tup1 = 's'
    else:
        tup1 = 'o'

if hand1[1] > hand2[1]: # 숫자 큰 게 앞으로 오게 함
    tup2, tup3 = hand1[1], hand2[1]    
else:
    tup2, tup3 = hand2[1], hand1[1]

tup = (tup1,tup2,tup3) #튜플 생성

print(tup) #확인용

if premium.count(tup) == 1 or special.count(tup) == 1 or good.count(tup) == 1: #판단
    print('Go bet')
else:
    print('FOLD')
